@model ASSIGNMENT1MVC.Models.FootballLeague

@{
    ViewBag.Title = "CreateNewRecord";
}

<style>
    body {
        background-color: limegreen;
    }
</style>
<h1 class="text-center">FootBall League</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container">
        <h3 class="text-center"><b>Add Match Result</b></h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MatchID, htmlAttributes: new { @class = "control-label col-sm-5" })
            <div class="col-sm-5">
                @Html.EditorFor(model => model.MatchID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatchID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeamName1, htmlAttributes: new { @class = "control-label col-sm-5" })
            <div class="col-sm-5">
                @Html.EditorFor(model => model.TeamName1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeamName1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeamName2, htmlAttributes: new { @class = "control-label col-sm-5" })
            <div class="col-sm-5">
                @Html.EditorFor(model => model.TeamName2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeamName2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status1, htmlAttributes: new { @class = "control-label col-sm-5" })
            <div class="col-sm-5">
                @Html.DropDownList("Status1", new List<SelectListItem>{
                        new SelectListItem{Text="--Select--", Value="select"},
                        new SelectListItem{Text="Win",Value="Win"},
                        new SelectListItem{Text="Draw",Value="Draw"}
                                                                    })
                @Html.ValidationMessageFor(model => model.Status1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WinningTeam, htmlAttributes: new { @class = "control-label col-sm-5" })
            <div class="col-sm-5">
                @Html.EditorFor(model => model.WinningTeam, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WinningTeam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-sm-5" })
            <div class="col-sm-5">
                @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-sm-5">
                <input type="submit" value="Save Match Data" class="btn btn-group-vertical btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
